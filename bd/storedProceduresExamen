CREATE OR REPLACE FUNCTION  sp_login(usernameP text, passwordP text) RETURNS INTEGER AS $$
   BEGIN
		if exists(SELECT * FROM TableUser where username = usernameP and password = passwordP) then
            return (select rol from TableUser where username = usernameP);
      	else
        	return -1;
        end if;
   END;
$$ LANGUAGE 'plpgsql'


CREATE FUNCTION  sp_addUser(usernameP text, passwordP text, rolP integer, activeP integer) RETURNS INTEGER AS $$
   BEGIN
   		if exists(SELECT * FROM TableUser where username = usernameP) then
            return 0;
      	else
            insert into TableUser(username, password, rol, active) values(usernameP, passwordP, rolP, activeP);
        	return 1;
        end if;
   END;
$$ LANGUAGE 'plpgsql';

CREATE FUNCTION  sp_updateUser(usernameP text, passwordP text, rolP integer) RETURNS INTEGER AS $$  
   BEGIN
   		if exists(SELECT * FROM TableUser where username = usernameP) then
            update  TableUser set rol = rolP, password = passwordP where username = usernameP;
            return 1;
      	else
        	return 0;
        end if;
   END;
$$ LANGUAGE 'plpgsql';

CREATE FUNCTION  sp_disableUser(usernameP text) RETURNS VOID AS $$ 
   BEGIN
   		update  TableUser set active = 0 where username = usernameP;
   END;
$$ LANGUAGE 'plpgsql';
 

CREATE OR REPLACE FUNCTION  sp_getUsers()
RETURNS SETOF TableUser AS $$
   BEGIN
		RETURN QUERY SELECT * FROM TableUser where active = 1;
   END; $$
LANGUAGE 'plpgsql';





CREATE OR REPLACE FUNCTION sp_addClient(idNumberP integer, nameP text, lastnameP text, birthP text, directionP text, statusP text, genderP integer, discountP float) RETURNS integer AS $$
	BEGIN
    	if exists(SELECT * FROM Client where idNumber = idNumberP) then  
        	return 0;
        else
        	insert into Client(idNumber, name, lastName, birth, direction, status, gender, register, discount, active) 
            values(idNumberP, nameP, lastNameP, birthP, directionP, statusP, genderP, current_date, discountP, 1);
            return 1;
       end if;
    END;
$$ LANGUAGE 'plpgsql'; 

CREATE OR REPLACE FUNCTION  sp_getClients()
RETURNS SETOF Client AS $$
   BEGIN
		RETURN QUERY SELECT * FROM Client where active = 1;
   END; $$
LANGUAGE 'plpgsql';

CREATE OR REPLACE FUNCTION sp_disableClient(idP integer) RETURNS VOID AS $$  
	BEGIN
    	update Client set active = 0 where idNumber = idP;
    END;
$$ LANGUAGE 'plpgsql'; 

CREATE OR REPLACE FUNCTION  sp_getClient(idP integer)
RETURNS SETOF Client AS $$
   BEGIN
		RETURN QUERY SELECT * FROM Client where idNumber = idP;
   END; $$
LANGUAGE 'plpgsql';

CREATE OR REPLACE FUNCTION sp_updateClient(idNumberP integer, nameP text, lastnameP text, birthP text, directionP text, statusP text, genderP integer, discountP float) RETURNS VOID AS $$  
	BEGIN
    	update Client set name=nameP, lastname=lastnameP, birth=birthP, direction=directionP, status=statusP, gender=genderP, discount=discountP where idNumber = idNumberP;
    END;
$$ LANGUAGE 'plpgsql'; 